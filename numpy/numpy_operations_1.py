# -*- coding: utf-8 -*-
"""Numpy-Operations-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PFpXh-weIV_fUoaqiLJBo4k8DCsbtZ8s

#### Numpy Documentation:
https://numpy.org/doc/stable/
"""

import numpy as np

arr = np.array([0, 1, 2, 3])
arr_2 = np.arange(10)
print(arr, "\n", arr_2)

# Commented out IPython magic to ensure Python compatibility.
# List vs Numpy array:
num_list = range(10000)
# %timeit [i**2 for i in num_list]

# Commented out IPython magic to ensure Python compatibility.
arr_3 = np.arange(10000)
# %timeit arr_3**2

# Numpy Array Attributes:
print(arr_3.ndim)
print(len(arr_3))
print(arr_3.shape)

# 2D & 3D Arrays:
arr_2d = np.array([[0,1,2],[3,4,5]])
print("2D Array details : \n", arr_2d)
print(arr_2d.ndim)
print(len(arr_2d))
print(arr_2d.shape)

arr_3d = np.array([[[0,1], [2,3]],[[4,5], [6,7]], [[8,9], [0,0]]])
print("3D Array details : \n", arr_3d)
print(arr_3d.ndim)
print(len(arr_3d))
print(arr_3d.shape)

arr = np.arange(1, 20, 3)
print(arr, "\n")
arr_2 = np.linspace(1, 20, 40)
print(arr_2)

arr

type(arr)

np.ones((5,5))

np.zeros((4,4))

np.eye(2,3)

np.diag([1,2,3,4,5])

arr = [0,1,2,3]
arr_2 = np.diag(arr)
arr_2

np.diag(arr_2)

# Random Numbers:

a = np.random.rand(5)
print(a)

# For Standard Normal distribution:
b = np.random.randn(5)
print(b)

a.dtype

arr_2.dtype

arr = np.arange(10, dtype="float64")
print(arr)
print(arr.dtype)

a = np.array([(1+2j),(3+4j)])
b = np.array([True, False, False, True])
c = np.array(["A", "B", "C", "D"])
print(a, "\n", b, "\n", c)
print(a.dtype, "\n", b.dtype, "\n", c.dtype)

arr_2[2,2]

arr_2[2:5]

# Slicing an array creates a view on the original array, which is a way of accessing data. The original array is not copied in memory.
a = np.arange(10)
print(a)
b = a[::2]
print(b)
print(np.shares_memory(a, b))

b[0]=10
print(b)
print(a)

c = a[::2].copy()
print(c)
print(np.shares_memory(a,c))

# Mask creates copy and not view:

a = np.random.randint(0, 30, 20)
mask = (a%2==0)
b = a[mask]
print(a)
print(b)
a[mask] = -1
print(a)

a[[2,4,7,5,2]]

a[[5, 10]] = 333
a


